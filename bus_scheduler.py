import streamlit as st
import random
import numpy as np

# H√†m chi ph√≠ (t·ªïng th·ªùi gian ch·∫°y + s·ªë chuy·∫øn)
def cost(schedule):
    total_time = sum(schedule)
    overload_penalty = abs(len(schedule) - st.session_state["num_buses"]) * 10
    return total_time + overload_penalty

# Sinh l·ªùi gi·∫£i l√¢n c·∫≠n
def neighbor(schedule):
    new_schedule = schedule[:]
    i = random.randint(0, len(schedule) - 1)
    new_schedule[i] += random.choice([-5, 5])
    new_schedule[i] = max(5, new_schedule[i])  # th·ªùi gian t·ªëi thi·ªÉu 5 ph√∫t
    return new_schedule

# Thu·∫≠t to√°n Simulated Annealing
def simulated_annealing(num_buses, num_routes, iterations, temp):
    # Kh·ªüi t·∫°o l·ªãch ng·∫´u nhi√™n
    schedule = [random.randint(10, 50) for _ in range(num_buses)]
    best = schedule[:]
    best_cost = cost(best)

    for _ in range(iterations):
        new_schedule = neighbor(schedule)
        c_old, c_new = cost(schedule), cost(new_schedule)

        if c_new < c_old or random.random() < np.exp((c_old - c_new) / temp):
            schedule = new_schedule[:]

        if cost(schedule) < best_cost:
            best = schedule[:]
            best_cost = cost(best)

        temp *= 0.99  # gi·∫£m nhi·ªát ƒë·ªô d·∫ßn

    return best, best_cost


# ================= STREAMLIT UI =================
st.title("üöå T·ªëi ∆∞u L·ªãch Xe Bu√Ωt b·∫±ng Thu·∫≠t to√°n T√¥i th√©p (SA)")

st.sidebar.header("‚öôÔ∏è Tu·ª≥ ch·ªçn")
num_buses = st.sidebar.number_input("S·ªë xe bu√Ωt", 1, 20, 5)
num_routes = st.sidebar.number_input("S·ªë tuy·∫øn ƒë∆∞·ªùng", 1, 10, 3)
iterations = st.sidebar.slider("S·ªë l·∫ßn l·∫∑p", 100, 5000, 1000, 100)
temperature = st.sidebar.slider("Nhi·ªát ƒë·ªô ban ƒë·∫ßu", 10, 500, 100, 10)

if "num_buses" not in st.session_state:
    st.session_state["num_buses"] = num_buses

if st.button("üöÄ Ch·∫°y t·ªëi ∆∞u"):
    best_schedule, best_cost = simulated_annealing(num_buses, num_routes, iterations, temperature)
    st.success("L·ªãch ch·∫°y xe bu√Ωt t·ªëi ∆∞u t√¨m ƒë∆∞·ª£c:")
    for i, t in enumerate(best_schedule, 1):
        st.write(f"Xe {i}: {t} ph√∫t/chuy·∫øn")
    st.write(f"üëâ T·ªïng chi ph√≠ = {best_cost}")
